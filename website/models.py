from . import db
from flask_login import UserMixin
from sqlalchemy.sql import func

class WebToonIP(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    num = db.Column(db.String(10))
    title = db.Column(db.String(50))
    genre = db.Column(db.String(30))
    keyword = db.Column(db.String(100))
    ref_path = db.Column(db.String(200))
    copyright = db.Column(db.String(100))  
    writer = db.Column(db.String(50))
    copyright_status = db.Column(db.String(50))
    condition = db.Column(db.String(50))
    date_pub = db.Column(db.String(10))
    monitored = db.Column(db.String(5))
    date_monitor = db.Column(db.String(10))
    suggested = db.Column(db.String(5))
    date_suggested = db.Column(db.String(10))
    story = db.Column(db.String(10000))
    feedback = db.Column(db.String(5000))
    date = db.Column(db.String(100))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class WebNovel(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    num = db.Column(db.String(10))
    title = db.Column(db.String(50))
    genre = db.Column(db.String(30))
    keyword = db.Column(db.String(100))
    ref_path = db.Column(db.String(200))
    copyright = db.Column(db.String(100))  
    writer = db.Column(db.String(50))
    copyright_status = db.Column(db.String(50))
    condition = db.Column(db.String(50))
    date_pub = db.Column(db.String(10))
    monitored = db.Column(db.String(5))
    date_monitor = db.Column(db.String(10))
    suggested = db.Column(db.String(5))
    date_suggested = db.Column(db.String(10))
    suggested_feedback = db.Column(db.String(20))
    story = db.Column(db.String(10000))
    feedback = db.Column(db.String(5000))
    date = db.Column(db.String(100))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class Books(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    num = db.Column(db.String(10))
    title = db.Column(db.String(50))
    category = db.Column(db.String(20))
    nation = db.Column(db.String(30))    
    genre = db.Column(db.String(30))
    keyword = db.Column(db.String(100))
    ref_path = db.Column(db.String(200))
    copyright = db.Column(db.String(100))  
    writer = db.Column(db.String(50))
    copyright_status = db.Column(db.String(50))
    condition = db.Column(db.String(50))
    date_pub = db.Column(db.String(10))
    monitored = db.Column(db.String(5))
    date_monitor = db.Column(db.String(10))
    suggested = db.Column(db.String(5))
    date_suggested = db.Column(db.String(10))
    suggested_feedback = db.Column(db.String(20))
    story = db.Column(db.String(10000))
    feedback = db.Column(db.String(5000))
    date = db.Column(db.String(100))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    
class User(db.Model, UserMixin):
    id = db.Column(db.Integer, primary_key=True)
    email = db.Column(db.String(150), unique=True)
    password = db.Column(db.String(150))
    first_name = db.Column(db.String(150))
    ips_WebToonIp = db.relationship('WebToonIP', backref = 'author', lazy = True)
    ips_WebNovel = db.relationship('WebNovel', backref = 'author', lazy = True)
    ips_Books = db.relationship('Books', backref = 'author', lazy = True)